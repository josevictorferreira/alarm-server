#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'listen'
require_relative '../lib/alarm_server'
require 'dotenv'

Dotenv.load

def start_server!
  spawn('./bin/server')
end

def stop_server!(pid)
  nil unless pid && Process.kill('TERM', pid)
rescue StandardError
  false
end

server_pid = start_server!
puts("Alarm Server started with PID: #{server_pid}\n")

listener = Listen.to(File.expand_path('../lib', __dir__)) do |_modified, _added, _removed|
  puts("Changes detected in lib. Restarting Alarm Server...\n")

  stop_server! server_pid

  server_pid = start_server!
  puts("Alarm Server restarted with PID: #{server_pid}\n")
end

listener.start

begin
  sleep
rescue Interrupt
  stop_server! server_pid
  puts("\nAlarm Server stopped\n")
  exit
end
